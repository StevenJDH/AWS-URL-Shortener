name: 'build'

on:
  push:
    branches:
    - main
    paths:
    - 'Terraform/**'
    - '!*.md'
  pull_request:
    branches:
    - main
    paths:
    - 'Terraform/**'
    - '!*.md'
    types: [opened, synchronize, reopened] # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#pull_request
  workflow_dispatch: # Run workflow manually, through the Github Actions Workflow page directly.

env:
  TF_CACHE_DIR: ${{ github.workspace }}/Terraform/.terraform

jobs:
  terraform:
    name: 'Terraform Check'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: Terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Cache Terraform
      uses: actions/cache@v4
      with:
        path: ${{ env.TF_CACHE_DIR }}
        key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.3.9
        terraform_wrapper: false

    # Initialize a new or existing Terraform working directory by creating initial files, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -backend=false

    # Checks that all Terraform configuration files adhere to a canonical format.
    - name: Terraform Format
      run: terraform fmt -check -diff -recursive

    # Checks whether configuration is syntactically valid and internally consistent.
    - name: Terraform Validate
      run: terraform validate

  tflint:
    name: 'TFLint'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: Terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Cache Plugin Folder
      uses: actions/cache@v4
      with:
        path: ~/.tflint.d/plugins
        key: ${{ runner.os }}-tflint-${{ hashFiles('**/.tflint.hcl') }}

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: latest
        tflint_wrapper: false

    - name: Show Version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init --recursive
      env:
        # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
        GITHUB_TOKEN: ${{ github.token }}

    - name: Run TFLint
      run: tflint -f compact --recursive